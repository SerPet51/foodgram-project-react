name: Foodgram workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/
          no-cache: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest
      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend/
          no-cache: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest


  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.production.yml"
        target: "foodgram"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
            cd foodgram
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            sudo docker-compose up -d
            sudo docker-compose exec backend python manage.py makemigrations
            sudo docker-compose exec backend python manage.py migrate
            sudo docker-compose exec backend python manage.py collectstatic --noinput
            sudo docker-compose exec backend python manage.py load_data

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!